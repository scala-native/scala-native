
// BEWARE: This file is generated - direct edits will be lost.
// Do not edit this it directly other than to remove
// personally identifiable information in sourceLocation lines.
// All direct edits to this file will be lost the next time it
// is generated.
//
// See nativelib runtime/Arrays.scala.gyb for details.

package scala.scalanative
package runtime

import scalanative.unsafe._

final class CFuncRawPtr(val rawptr: RawPtr) 
% for N in range(0, 23):
%   args  = ", ".join("arg" + str(i) + ": Any" for i in range(1, N+1))
%   targs = ", ".join(["Any" for i in range(1, N+1)] + ["Any"])
%   kw    = "extends" if N == 0 else "with"
  ${kw} CFuncPtr${N}[${targs}]
% end
{
  def as[F <: CFuncPtr](implicit tag: Tag.CFuncPtrTag[F]): F =
    tag.load(Boxes.boxToPtr[F](rawptr), loadPtr = false)

  def throwUnsupported(): Nothing = throw new UnsupportedOperationException(
    "Invalid use of CFuncRawPtr.apply method. " +
          "In order to apply underlying function convert this to concrete CFuncPtr type " +
          "using `as` conversion method"
  )
% for N in range(0, 23):
%   args  = ", ".join("arg" + str(i) + ": Any" for i in range(1, N+1))
%   targs = ", ".join(["Any" for i in range(1, N+1)] + ["Any"])
%   kw    = "extends" if N == 0 else "with"
  def apply(${args}): Any = throwUnsupported()
% end
}
