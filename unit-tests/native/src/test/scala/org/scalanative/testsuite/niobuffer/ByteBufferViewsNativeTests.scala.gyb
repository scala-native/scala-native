package org.scalanative.testsuite.niobuffer

import scala.scalanative.memory._

import org.scalanative.testsuite.niobuffer.ByteBufferNativeFactories.WrappedPointerByteBufferFactory
import org.scalanative.testsuite.javalib.nio.BufferFactory
import org.scalanative.testsuite.javalib.nio.BaseBufferTest

import java.nio._

// scalafmt: { maxColumn = 200}


// format: off
% types = [('Char', '2'),
%          ('Short', '2'),
%          ('Int', '4'),
%          ('Long', '8'),
%          ('Float', '4'),
%          ('Double', '8')]
% for (T, size) in types:
abstract class ${T}BufferTest extends BaseBufferTest {
  type Factory = BufferFactory.${T}BufferFactory

  class ByteBuffer${T}ViewFactory(byteBufferFactory: BufferFactory.ByteBufferFactory, order: ByteOrder) extends Factory with BufferFactory.ByteBufferViewFactory {
    require(!byteBufferFactory.createsReadOnly)

    override val createsPointerBuffer: Boolean = byteBufferFactory.createsPointerBuffer

    def baseAllocBuffer(capacity: Int): ${T}Buffer =
      byteBufferFactory
        .allocBuffer(capacity * ${size})
        .order(order)
        .as${T}Buffer()
  }
}

// ${T} views of byte buffers
abstract class ${T}ViewOfByteBufferTest(byteBufferFactory: BufferFactory.ByteBufferFactory, order: ByteOrder) extends ${T}BufferTest {
  val factory: BufferFactory.${T}BufferFactory = new ByteBuffer${T}ViewFactory(byteBufferFactory, order)
}

class ${T}ViewOfWrappedByteBufferBigEndianTest    extends ${T}ViewOfByteBufferTest(new WrappedPointerByteBufferFactory, ByteOrder.BIG_ENDIAN)
class ${T}ViewOfWrappedByteBufferLittleEndianTest extends ${T}ViewOfByteBufferTest(new WrappedPointerByteBufferFactory, ByteOrder.LITTLE_ENDIAN)

// Read only ${T} views of byte buffers
abstract class ReadOnly${T}ViewOfByteBufferTest(byteBufferFactory: BufferFactory.ByteBufferFactory, order: ByteOrder) extends ${T}BufferTest {
  val factory: BufferFactory.${T}BufferFactory = new ByteBuffer${T}ViewFactory(byteBufferFactory, order) with BufferFactory.ReadOnlyBufferFactory
}

class ReadOnly${T}ViewOfWrappedByteBufferBigEndianTest    extends ReadOnly${T}ViewOfByteBufferTest(new WrappedPointerByteBufferFactory, ByteOrder.BIG_ENDIAN)
class ReadOnly${T}ViewOfWrappedByteBufferLittleEndianTest extends ReadOnly${T}ViewOfByteBufferTest(new WrappedPointerByteBufferFactory, ByteOrder.LITTLE_ENDIAN)
% end 
