--- 3.8.0-RC1-bin-20250914-afbb66b-NIGHTLY/scala/Predef.scala
+++ overrides-3/scala/Predef.scala
@@ -168,8 +168,8 @@
   type Class[T]      = java.lang.Class[T]
 
   // miscellaneous -----------------------------------------------------
-  scala.`package`                         // to force scala package object to be seen.
-  scala.collection.immutable.List         // to force Nil, :: to be seen.
+  // scala.`package`                         // to force scala package object to be seen.
+  // scala.collection.immutable.List         // to force Nil, :: to be seen.
 
   /**  @group aliases */
   type Function[-A, +B] = Function1[A, B]
@@ -179,9 +179,9 @@
   /**  @group aliases */
   type Set[A]     = immutable.Set[A]
   /**  @group aliases */
-  val Map         = immutable.Map
+  @inline def Map = immutable.Map
   /**  @group aliases */
-  val Set         = immutable.Set
+  @inline def Set = immutable.Set
 
   /**
    * Allows destructuring tuples with the same syntax as constructing them.
@@ -195,7 +195,7 @@
    * }}}
    * @group aliases
    */
-  val ->        = Tuple2
+  @inline def ->        = Tuple2
 
   // Manifest types, companions, and incantations for summoning
   // TODO undeprecated until Scala reflection becomes non-experimental
@@ -207,10 +207,10 @@
   type Manifest[T]      = scala.reflect.Manifest[T]
   // TODO undeprecated until Scala reflection becomes non-experimental
   // @deprecated("use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead", "2.10.0")
-  val Manifest          = scala.reflect.Manifest
+  @inline def Manifest  = scala.reflect.Manifest
   // TODO undeprecated until Scala reflection becomes non-experimental
   // @deprecated("this notion doesn't have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.", "2.10.0")
-  val NoManifest        = scala.reflect.NoManifest
+  @inline def NoManifest = scala.reflect.NoManifest
 
   // TODO undeprecated until Scala reflection becomes non-experimental
   // @deprecated("use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead", "2.10.0")
