--- 3.8.0-RC1-bin-20251017-96aff06-NIGHTLY/scala/Array.scala
+++ overrides-3/scala/Array.scala
@@ -35,7 +35,7 @@
  *  where the array objects `a`, `b` and `c` have respectively the values
  *  `Array(1, 2)`, `Array(0, 0)` and `Array(1, 2, 0, 0)`.
  */
-object Array {
+private object EmptyArrays {
   val emptyBooleanArray = new Array[Boolean](0)
   val emptyByteArray    = new Array[Byte](0)
   val emptyCharArray    = new Array[Char](0)
@@ -45,7 +45,19 @@
   val emptyLongArray    = new Array[Long](0)
   val emptyShortArray   = new Array[Short](0)
   val emptyObjectArray  = new Array[Object](0)
+}
 
+object Array {
+  @inline def emptyBooleanArray = EmptyArrays.emptyBooleanArray
+  @inline def emptyByteArray    = EmptyArrays.emptyByteArray
+  @inline def emptyCharArray    = EmptyArrays.emptyCharArray
+  @inline def emptyDoubleArray  = EmptyArrays.emptyDoubleArray
+  @inline def emptyFloatArray   = EmptyArrays.emptyFloatArray
+  @inline def emptyIntArray     = EmptyArrays.emptyIntArray
+  @inline def emptyLongArray    = EmptyArrays.emptyLongArray
+  @inline def emptyShortArray   = EmptyArrays.emptyShortArray
+  @inline def emptyObjectArray  = EmptyArrays.emptyObjectArray
+
   /** Provides an implicit conversion from the Array object to a collection Factory */
   implicit def toFactory[A : ClassTag](dummy: Array.type): Factory[A, Array[A]] = new ArrayFactory(dummy)
   @SerialVersionUID(3L)
@@ -127,7 +139,8 @@
     * @see `java.util.Arrays#copyOf`
     */
   def copyOf[A](original: Array[A], newLength: Int): Array[A] = ((original: @unchecked) match {
-    case original: Array[BoxedUnit]  => newUnitArray(newLength).asInstanceOf[Array[A]]
+    //  We cannot distinguish Array[BoxedUnit] from Array[Object] in Scala Native
+    //	case original: Array[BoxedUnit]  => newUnitArray(newLength).asInstanceOf[Array[A]]
     case original: Array[AnyRef]     => java.util.Arrays.copyOf(original, newLength)
     case original: Array[Int]        => java.util.Arrays.copyOf(original, newLength)
     case original: Array[Double]     => java.util.Arrays.copyOf(original, newLength)
@@ -152,7 +165,7 @@
     *
     * @see `java.util.Arrays#copyOf`
     */
-  def copyAs[A](original: Array[_], newLength: Int)(implicit ct: ClassTag[A]): Array[A] = {
+  def copyAs[A](original: Array[?], newLength: Int)(implicit ct: ClassTag[A]): Array[A] = {
     val runtimeClass = ct.runtimeClass
     if (runtimeClass == Void.TYPE) newUnitArray(newLength).asInstanceOf[Array[A]]
     else {
