name: Windows tests
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  run-tests:
    name: Run tests
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        scala: [2.13.6, 2.12.15, 2.11.12]
        gc: [none, boehm, immix, commix]
    steps:
      - uses: actions/checkout@v2

      # We need to set proper Pagefile limits in advance.
      # Github actions default page file size is quite small,
      # it's not enough to run all tests, especially when using None GC.
      # We've observed that on Unix memory management is less strict,
      # you can reserve more memory than it's physically possible.
      # On Windows however you need to reserve/commit memory in advance -
      # it does not matter whether it would be used or not, the amount of all
      # reserved memory cannot exceed the amount of physically available storage.
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 4GB
          maximum-size: 16GB

      #Prepare environment, clang needs to be installed
      #Compilation on MSVC needs c++14 or higher and expects llvm 11.0.0 or newer
      #Cache commonly used files: Coursier, ivy cache
      - name: Resolve env variables
        id: resolve-env
        run: |
          echo "::set-output name=ProgramFiles::${env:ProgramFiles}"
          echo "::set-output name=LocalAppData::${env:LocalAppData}"
          echo "::set-output name=UserProfile::${env:UserProfile}"
          echo "::set-output name=VcpkgLibs::${env:VCPKG_INSTALLATION_ROOT}\installed\x64-windows-static"

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: |
            ${{steps.resolve-env.outputs.ProgramFiles}}\LLVM\
            ${{steps.resolve-env.outputs.LocalAppData}}\Coursier\Cache\v1\
            ${{steps.resolve-env.outputs.UserProfile}}\.ivy2\cache
          key: ${{ runner.os }}-${{ matrix.scala }}-deps
      # Install LLVM in case if cache is missing
      - name: Install LLVM
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: choco install llvm --version=11.0.0

      - name: Add LLVM on Path
        run: echo "${env:ProgramFiles}\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Assert clang installed and on path
        run: clang --version

      - name: Install libs
        run: vcpkg install bdwgc zlib --triplet=x64-windows-static

      # None GC takes too much memory on Windows to execute partest JUnit tests
      # leading to spurious failures in the CI. Perform subset of tests instead
      - name: Test runtime None GC
        if: matrix.gc == 'none'
        run: >
          set SCALANATIVE_GC=${{matrix.gc}}&
          set SCALANATIVE_INCLUDE_DIRS=${{steps.resolve-env.outputs.VcpkgLibs}}\include&
          set SCALANATIVE_LIB_DIRS=${{steps.resolve-env.outputs.VcpkgLibs}}\lib&
          set SCALANATIVE &
          sbt ++${{matrix.scala}}
          sandbox/run
          testsJVM/test
          tests/test
          testsExt/test
          testsExtJVM/test
          "scalaPartestTests/testOnly -- --showDiff neg/abstract.scala pos/abstract.scala run/Course-2002-01.scala"
        shell: cmd
      
      - name: Test runtime
        if: matrix.gc != 'none'
        run: >
          set SCALANATIVE_GC=${{matrix.gc}}&
          set SCALANATIVE_INCLUDE_DIRS=${{steps.resolve-env.outputs.VcpkgLibs}}\include&
          set SCALANATIVE_LIB_DIRS=${{steps.resolve-env.outputs.VcpkgLibs}}\lib&
          set SCALANATIVE &
          sbt ++${{matrix.scala}}
          test-runtime
          "scalaPartestTests/testOnly -- --showDiff neg/abstract.scala pos/abstract.scala run/Course-2002-01.scala"
        shell: cmd

  run-scripted-tests:
    name: Run scripted tests
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        scala: [2.12.15]
    steps:
      - uses: actions/checkout@v2
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 4GB
          maximum-size: 16GB

      #Prepare environment, clang needs to be installed
      #Compilation on MSVC needs c++14 or higher and expects llvm 11.0.0 or newer
      #Cache commonly used files: Coursier, ivy cache
      - name: Resolve env variables
        id: resolve-env
        run: |
          echo "::set-output name=ProgramFiles::${env:ProgramFiles}"
          echo "::set-output name=LocalAppData::${env:LocalAppData}"
          echo "::set-output name=UserProfile::${env:UserProfile}"

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: |
            ${{steps.resolve-env.outputs.ProgramFiles}}\LLVM\
            ${{steps.resolve-env.outputs.LocalAppData}}\Coursier\Cache\v1\
            ${{steps.resolve-env.outputs.UserProfile}}\.ivy2\cache
          key: ${{ runner.os }}-${{ matrix.scala }}-deps

      # Install LLVM in case if cache is missing
      - name: Install LLVM
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: choco install llvm --version=11.0.0

      - name: Add LLVM on Path
        run: echo "${env:ProgramFiles}\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Assert clang installed and on path
        run: clang --version

      - name: Test scripted
        run: sbt ++${{matrix.scala}};test-scripted
        shell: cmd
