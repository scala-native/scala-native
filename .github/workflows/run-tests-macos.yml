name: Run tests MacOs
on:
  workflow_call:
  pull_request:
  push:
    branches:
      - main
      - 0.4.x
concurrency:
  group: macOS-${{ github.head_ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  test-runtime:
    name: Test runtime
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        scala: [3.3.1]
        gc: [none, boehm, immix, commix]
        include:
          - scala: 2.13.12
            gc: commix
          - scala: 2.13.12
            gc: none
          - scala: 2.12.18
            gc: boehm

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/macos-setup-env
        id: setup
        with:
          scala-version: ${{matrix.scala}}
          gc: ${{ matrix.gc }}

      - name: Test runtime
        run: >
          export SCALANATIVE_GC=${{matrix.gc}} &&
          sbt ++${{matrix.scala}}
          "test-runtime ${{matrix.scala}}"

      - name: Test partests infrastructure
        # No partests support for Scala 3
        if: ${{ !startsWith(matrix.scala, '3.') }}
        run: >
          sbt ++${{matrix.scala}}
          "scalaPartestTests${{env.project-version}}/testOnly -- --showDiff neg/abstract.scala pos/abstract.scala run/Course-2002-01.scala"

  test-runtime-ext:
    name: Test runtime extension
    runs-on: macos-11
    needs: [test-runtime]
    if: "(github.event_name == 'schedule' || github.event_name == 'workflow_call')  && github.repository == 'scala-native/scala-native'"
    strategy:
      fail-fast: false
      matrix:
        scala: [3.3.1, 2.13.12]
        build-mode: [debug, release-fast]
        lto: [none, thin]
        gc: [boehm, immix, commix]
        exclude:
          # Covered in basic test-runtime
          - scala: 3.3.1
            build-mode: debug
          - scala: 2.13.12
            build-mode: debug
            gc: immix
        include:
          - scala: 3.3.1
            build-mode: release-size
            lto: thin
            gc: immix
          - scala: 3.3.1
            build-mode: release-full
            lto: thin
            gc: commix
          - scala: 2.13.12
            build-mode: release-full
            lto: full
            gc: commix
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/macos-setup-env
        with:
          scala-version: ${{matrix.scala}}
          gc: ${{ matrix.gc }}

      - name: Prepare setConfig command
        # Linking on MacOS in GithubActions fails when using default linker (ld), use lld instead
        run: |
          SetConfigTemplate=$(cat << EOM
            nativeConfig ~= { prev =>
              prev
                .withLinkingOptions(prev.linkingOptions ++ Seq("-fuse-ld=lld") )
            }
          EOM
          )
          echo set-native-config=${SetConfigTemplate} >> $GITHUB_ENV

      - name: Run tests
        env:
          SCALANATIVE_MODE: ${{ matrix.build-mode }}
          SCALANATIVE_GC: ${{ matrix.gc }}
          SCALANATIVE_LTO: ${{ matrix.lto }}
          SCALANATIVE_OPTIMIZE: true
          TEST_COMMAND: >
            ++${{matrix.scala}} -v;
            set sandbox.forBinaryVersion("${{env.binary-version}}")/${{env.set-native-config}};
            set tests.forBinaryVersion("${{env.binary-version}}")/${{env.set-native-config}};
            set junitTestOutputsNative.forBinaryVersion("${{env.binary-version}}")/${{env.set-native-config}};
            set scalaPartestJunitTests.forBinaryVersion("${{env.binary-version}}")/${{env.set-native-config}};

            show tests${{env.project-version}}/nativeConfig;

            sandbox${{env.project-version}}/run;
            testsJVM${{env.project-version}}/test;
            tests${{env.project-version}}/test;
            junitTestOutputsJVM${{env.project-version}}/test;
            junitTestOutputsNative${{env.project-version}}/test;
            scalaPartestJunitTests${{env.project-version}}/test
        run: |
          export LLVM_BIN="$(brew --prefix llvm@15)/bin"
          $LLVM_BIN/clang --version
          sbt -J-Xmx5G "${TEST_COMMAND}"

  run-scripted-tests:
    name: Scripted tests
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        scala: [2.12.18, 3.1.3]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/macos-setup-env
        with:
          scala-version: ${{matrix.scala}}

      - name: Test scripted
        run: |
          export LLVM_BIN=$(brew --prefix llvm@15)/bin
          sbt "test-scripted ${{matrix.scala}}"
