name: Run tests
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  tests-tools:
    name: Test tools
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scala: [2.13.3, 2.12.12, 2.11.12]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Calculate binary version
        run: |
          version=${{matrix.scala}}
          echo "binary-version=${version%.*}" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/coursier
            ~/.ivy2/cache
            ~/.sbt/boot
          key: ${{ runner.os }}-deps-${{ env.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}

      - name: Test tools
        run: sbt "++ ${{ matrix.scala }} -v" "-no-colors" "-J-Xmx3G" test-tools

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.read-dockerfile.outputs.image-version }}
    strategy:
      matrix:
        target-platrform: [ library ]

    steps:
      - uses: actions/checkout@v2
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
      - name: Check shall build new image
        id: read-dockerfile
        run: |
          version=$(cat ./ci-docker/Dockerfile | grep "#version:" | head -1 | awk '{print $2}')
          imageID=$(docker images scala-native-testing/linux-${{ matrix.target-platrform }}:${version} -q 2> /dev/null)

          echo "::set-output name=image-version::${version}"
          echo "::set-output name=image-id::${imageID}"

      - name: Build the Docker image
        if: ${{ steps.read-dockerfile.outputs.image-id == '' }}
        run: "
        docker run \
         --rm \
         --privileged \
         multiarch/qemu-user-static:register;

        docker build
          -t scala-native-testing/linux-${{ matrix.target-platrform }}:${{ steps.read-dockerfile.outputs.image-version }} \
          --build-arg TARGET_DOCKER_PLATFORM=${{ matrix.target-platrform }} \
          --build-arg HOST_ARCHITECTURE=amd64 \
          --cpuset-cpus=0 \
          ci-docker"


  test-runtime:
    name: Test runtime
    runs-on: ${{ matrix.os }}
    needs: [tests-tools, build-image]
    strategy:
      fail-fast: false
      matrix:
        scala: [2.13.3, 2.12.12, 2.11.12]
        build-mode: [ debug , release-fast ]
        gc: [ boehm, immix, commix ]
        os: [ ubuntu-latest ]
        target-platrform: [ library ]
        exclude:
          - scala: 2.13.3
            build-mode: debug
            gc: boehm
            os: ubuntu-latest
            target-platrform: library
          - scala: 2.12.12
            build-mode: debug
            gc: immix
            os: ubuntu-latest
            target-platrform: library
          - scala: 2.11.12
            build-mode: debug
            gc: commix
            os: ubuntu-latest
            target-platrform: library
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Calculate binary version
        run: |
          version=${{ matrix.scala }}
          echo "binary-version=${version%.*}" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/coursier
            ~/.ivy2/cache
            ~/.sbt/boot
          key: ${{ runner.os }}-deps-${{ env.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}

      - uses: satackey/action-docker-layer-caching@v0.0.8
        with:
          skip-save: true
        continue-on-error: true

      - name: Run tests
        env:
          SCALANATIVE_MODE: ${{ matrix.build-mode }}
          SCALANATIVE_GC: ${{ matrix.gc }}
          SCALA_VERSION: ${{ matrix.scala}}
          SCALANATIVE_OPTIMIZE: true
          TEST_COMMAND: test-runtime
          TARGET_DOCKER_PLATFORM: ${{ matrix.target-platrform }}
        run: ./ci-docker/run-test-gha.sh ${{ needs.build-image.outputs.image-version }}

  test-runtime-no-opt:
    name: Test runtime no-opt
    runs-on: ${{ matrix.os }}
    needs: [tests-tools, build-image]
    strategy:
      fail-fast: false
      matrix:
        scala: [ 2.13.3, 2.12.12, 2.11.12 ]
        build-mode: [ debug, release-fast ]
        gc: [ immix ]
        os: [ ubuntu-latest ]
        target-platrform: [ library ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Calculate binary version
        run: |
          version=${{ matrix.scala }}
          echo "binary-version=${version%.*}" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/coursier
            ~/.ivy2/cache
            ~/.sbt/boot
          key: ${{ runner.os }}-deps-${{ env.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}

      - uses: satackey/action-docker-layer-caching@v0.0.8
        with:
          skip-save: true
        continue-on-error: true

      - name: Run tests
        env:
          SCALANATIVE_MODE: ${{ matrix.build-mode }}
          SCALANATIVE_GC: ${{ matrix.gc }}
          SCALA_VERSION: ${{ matrix.scala}}
          SCALANATIVE_OPTIMIZE: false
          TEST_COMMAND: test-runtime
          TARGET_DOCKER_PLATFORM: ${{ matrix.target-platrform }}
        run: ./ci-docker/run-test-gha.sh ${{ needs.build-image.outputs.image-version }}

  test-scripted:
    name: Test scripted
    runs-on: ${{ matrix.os }}
    needs: [tests-tools, build-image]
    strategy:
      fail-fast: false
      matrix:
        scala: [2.13.3, 2.12.12, 2.11.12]
        build-mode: [ release-fast ]
        gc: [ immix ]
        os: [ ubuntu-latest ]
        target-platrform: [ library ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Calculate binary version
        run: |
          version=${{ matrix.scala }}
          echo "binary-version=${version%.*}" >> $GITHUB_ENV
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/coursier
            ~/.ivy2/cache
            ~/.sbt/boot
          key: ${{ runner.os }}-deps-${{ env.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}

      - uses: satackey/action-docker-layer-caching@v0.0.8
        with:
          skip-save: true
        continue-on-error: true

      - name: Run tests
        env:
          SCALANATIVE_MODE: ${{ matrix.build-mode }}
          SCALANATIVE_GC: ${{ matrix.gc }}
          SCALA_VERSION: ${{ matrix.scala}}
          SCALANATIVE_OPTIMIZE: true
          TEST_COMMAND: test-scripted
          TARGET_DOCKER_PLATFORM: ${{ matrix.target-platrform }}
        run: ./ci-docker/run-test-gha.sh ${{ needs.build-image.outputs.image-version }}
