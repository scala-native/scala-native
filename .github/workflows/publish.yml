name: Publish
on:
  push:
    tags:
    - 'v0.5.*'
  workflow_dispatch
  schedule:
  # Snapshot release every second work day
  - cron: '0 0 * * 1,3,5'

jobs:
  test-linux:
    if: github.event_name != 'schedule' && github.repository == 'scala-native/scala-native'
    uses: ./.github/workflows/run-tests-linux.yml
  test-windows:
    if: github.event_name != 'schedule' && github.repository == 'scala-native/scala-native'
    uses: ./.github/workflows/run-tests-windows.yml
  test-macos:
    if: github.event_name != 'schedule' && github.repository == 'scala-native/scala-native'
    uses: ./.github/workflows/run-tests-macos.yml
  test-jdk-compliance:
    if: github.event_name != 'schedule' && github.repository == 'scala-native/scala-native'
    uses: ./.github/workflows/run-jdk-compliance-tests.yml
  test-multiarch:
    if: github.event_name != 'schedule' && github.repository == 'scala-native/scala-native'
    uses: ./.github/workflows/run-tests-linux-multiarch.yml

  publish:
    name: Publish
    runs-on: ubuntu-22.04
    needs: [test-linux, test-windows, test-macos, test-jdk-compliance, test-multiarch]
    if: github.repository == 'scala-native/scala-native'
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/linux-setup-env
        with:
          scala-version: "2.13" #Unused, any version can be placed here
          java-version: 8

      - name: Setup PGP Key
        run: |
          echo -n "$PGP_SECRET" | base64 --decode | gpg --batch --import
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}

      - name: Publish release
        env:
          MAVEN_USER: "${{ secrets.SONATYPE_USER }}"
          MAVEN_PASSWORD: "${{ secrets.SONATYPE_PASSWORD }}"
          PGP_PASSPHRASE: "${{ secrets.PGP_PASSWORD }}"
        run: sbt "-v" "-J-Xmx5G" "publishRelease"
